import React from 'react';
import { Group, Circle, Text, Line, Arc, Wedge } from 'react-konva';

const Sensor = ({ sensor, onClick, viewMode = "normal" }) => {
  // –ï—Å–ª–∏ sensor –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é –≥—Ä—É–ø–ø—É
  if (!sensor || !sensor.type) {
    return <Group />;
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –¥–∞—Ç—á–∏–∫–∞
  const getStatusColor = (status) => {
    switch (status) {
      case 'normal':
        return '#44CC44'; // –ó–µ–ª–µ–Ω—ã–π –¥–ª—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
      case 'warning':
        return '#FFAA00'; // –û—Ä–∞–Ω–∂–µ–≤—ã–π –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
      case 'alarm':
        return '#FF0000'; // –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è —Ç—Ä–µ–≤–æ–≥–∏
      case 'high':
        return '#9900FF'; // –§–∏–æ–ª–µ—Ç–æ–≤—ã–π –¥–ª—è –≤—ã—Å–æ–∫–∏—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
      default:
        return '#44CC44';
    }
  };

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –¥–∞—Ç—á–∏–∫–∞
  const getSensorIcon = (type) => {
    switch (type) {
      case 'temperature':
        return 'üå°Ô∏è';
      case 'humidity':
        return 'üíß';
      case 'fire':
        return 'üî•';
      case 'movement':
        return 'üë§';
      case 'security':
        return 'üì∑';
      case 'server':
        return 'üíª';
      case 'water':
        return 'üöø';
      case 'gas':
        return '‚öóÔ∏è';
      case 'power':
        return '‚ö°';
      default:
        return 'üìä';
    }
  };

  // –†–∞–∑–º–µ—Ä –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞—Ç—á–∏–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
  const sensorRadius = viewMode === "sensors" ? 12 : 10;
  const showLabel = viewMode !== "heatmap";
  const showIcon = viewMode !== "heatmap";
  
  // –¶–≤–µ—Ç –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
  const statusColor = getStatusColor(sensor.status || 'normal');
  const fillOpacity = viewMode === "sensors" ? 1 : 0.8;
  
  // –û—Å–æ–±–∞—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –¥–ª—è –∫–∞–º–µ—Ä –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  if (sensor.type === 'security') {
    const cameraAngle = sensor.angle || 0;
    const coneLength = 30 / (viewMode === "sensors" ? 0.8 : 1);

    return (
      <Group onClick={onClick ? () => onClick(sensor) : undefined}>
        {/* –ö—Ä—É–≥ –∫–∞–º–µ—Ä—ã */}
        <Circle
          x={sensor.x}
          y={sensor.y}
          radius={8}
          fill={statusColor}
          opacity={fillOpacity}
          stroke="#333333"
          strokeWidth={1}
        />
        
        {/* –ö–æ–Ω—É—Å –æ–±–∑–æ—Ä–∞ */}
        <Wedge
          x={sensor.x}
          y={sensor.y}
          radius={coneLength}
          angle={60}
          rotation={cameraAngle}
          fill={statusColor}
          opacity={0.2}
          stroke={statusColor}
          strokeWidth={1}
        />
        
        {/* –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–µ—Ä—ã */}
        {showLabel && (
          <Text
            x={sensor.x - 15}
            y={sensor.y + 10}
            text={sensor.name}
            fontSize={8}
            fontFamily="Arial"
            fill="#333333"
            align="center"
            width={30}
          />
        )}
      </Group>
    );
  }

  // –≠—Ñ—Ñ–µ–∫—Ç –ø—É–ª—å—Å–∞—Ü–∏–∏ –¥–ª—è –¥–∞—Ç—á–∏–∫–æ–≤ —Å —Ç—Ä–µ–≤–æ–≥–æ–π
  const isAlarming = sensor.status === 'alarm';
  const pulseClass = isAlarming ? 'sensor-alarm' : '';

  return (
    <Group 
      onClick={onClick ? () => onClick(sensor) : undefined}
      className={pulseClass}
    >
      <Circle
        x={sensor.x}
        y={sensor.y}
        radius={sensorRadius}
        fill={statusColor}
        opacity={fillOpacity}
        stroke="#333333"
        strokeWidth={1}
      />
      
      {showIcon && (
        <Text
          x={sensor.x - 5}
          y={sensor.y - 5}
          text={getSensorIcon(sensor.type)}
          fontSize={10}
          align="center"
          verticalAlign="middle"
        />
      )}
      
      {showLabel && (
        <Text
          x={sensor.x - 15}
          y={sensor.y + 12}
          text={sensor.name}
          fontSize={8}
          fontFamily="Arial"
          fill="#333333"
          align="center"
          width={30}
        />
      )}
    </Group>
  );
};

export default Sensor; 